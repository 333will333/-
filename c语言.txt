 http://hi.baidu.com/jsj08  二级C语言加油站
gets(a);读入字符串
puts(a);输出字符串
getchar();吸收空格，读入字符串
putchar();输出字符串；
%s 把整个字符串视为一个字符；可以输入空格，回车；

	a="sssss";
a=2;
char c;
数组的连接：1.使用中间数组 2.使用循环，将续接数组的字符赋值给前一数组，同时覆盖前一数组的\0；
数组最后一位默认加\0，可以用于在循环中结束循环，循环也可以取消\0，用于连接数组；



strcat(a,b);
strcpy(a,b);
strcmp(a,b);/*逐字符比较字符ASLL的大小*/
strlen(a);
varchar






sqrt
rand
fabs
pow
pow(x,y);--for sql
#include"graphics.h"
函数：
用户自定义函数：
函数原型：
int  sadsadaa（越长越好）（int）；
void   （int）
自定义函数时，出现形参，实参；
实参的值改变单向影响形参的值，但形参的值改变不影响实参的值；
string类型？
putchar ('\n')==printf("\n");






递归（函数自调用）
函数调用



C语言三部分：第一部分：到循环；
             第二部分：（提高）数组，函数；
             第三部分：指针，结构体，链表，文件；



工资问题：定义一个二维数组存名字，另一个二维数组存工资，输出；
          把名字按工资从大到小输出；




p=(int *)malloc(sizeof(int)*20)分配内存
free(p)释放空间
用指针交换两数：直接交换其指针即可；




给该指针分配15个空间：
int *p;
p=(int *)malloc(sizeof(int)*15);
free(p);

#include"stdio.h"
int main()
{
	int p,i;
	p=(int *)malloc(sizeof(int)*5);
	for(i=0;i<5;i++)
	scanf("%d",&p++);/*注意p++,p--,--p,++p不能超过分配的长度*/
	for(i=0;i<5;i++)
	printf("%d",p++);
	return 0;
 } 




*(*(a+i)+j)==a[i][j];


数组只能存同一种类型的数据，
结构体：




链表：
1.链表节点的定义；
   
struct student

{
  char student[40]   
  int age;
  struct student *next;   

}


void main()
{
  struct a,b,c,d,*head,*p;
  strcpy(a.name,"jack");a.age=10;
  strcpy(b.name,"peter");b.age=11;
  strcpy(c.name,"marry");c.age=12;
  
}


暑假学习：

71、镂空三角，K型，X型算法：
以最长排为准，连用两个if else ，符合条件就输出符号，最后一个else输出空格。
常用算法：
i为行数，j为该行第几个。
最长排长度：2*n-1
第一个符号输出：i+j==n-1
第二个符号输出：j-i==n-1

72.找对手：
三因素循环，不重叠。

74.类似比较版本号
输入模块：
数组存储，循环输入。输入时，用空格间隔，效果和每输入一个数据就输入一个回车一样。
限制比较次数：
先给t赋值，再使用while(t--)或for(;t--;)，当t--为0时，循环结束，不用减1.
对应位数的比较（角标一样的比较）：
循环加n的值，就只需要一个比较结构。

75.铺地砖：
可枚举的情况：
在输入之前，先把所有的情况算出来，储存在数组中，然后根据输入提取对应结果即可。
常见应用： 汉罗塔改， 铺地砖， 存款问题（复利），

78.每年取1000问题：
核心算法：total=(total+1000.)/(1+利率)
注：若为月息，则 利率*12
浮点型数据可以写成：100. 或 .0043 的形式。

79.角谷猜想：
if里用return 0 可以提前结束程序，if外再用return 0,就可以分成两条路。例如：不符合题意的输入值，跳出程序。
奇偶分别处理：if(n%2) { }
                       else { }
加，减，乘，除：
n+=2,n-=2，n*=2,n/=2

80.九九乘法表：
%-3d：左对齐，占3格。用来解决对齐问题。


81.找最小点：
定义变量：minx,miny
比较大小，只输出结果的问题，可以先定义初始值，再用循环结构里的比较大小算法（循环中也放一个输入语句），   输入一个比较一个，替换初始值，每步都只记录最值结果。

82.次方取最后3位：
在一个int连续定义变量时，可以进行赋值。
求几次方：循环叠乘。
该题解法：没叠乘一次，用一个变量记录后3位，（对1000取余，即%1000）。

83.if ( ! (a%25) )????????????

84.借书方案：
3人借主要算法：次数=n*(n-1)*(n-2)
3个因素枚举：前两个用循环，连用两个for，   （不用写大括号），最后一个循环的判断条件中，可以并上前两个不等的条件，再在第三个循环内部加 if ( 第三个因素不等于前两个)。
换行方法：if (一般条件) +printf  
 if（a%b==0）+putchar(10)

85.得整数：
判断商是否为整数时，可将分母对分子取余，余数为0，则为整数。
将程序改成多次输入：
用while (1)阔起从输入提示语句到输出语句。不过，这样就无法从输入端结束程序。
或：用while (输入值)阔起从输出合法验证语句到输出语句，再在循环中加上新的输入提示，和输入语句。

89.产值翻翻：
输入为百分点时，/100变成百分数。

90.最大公因数，最小公倍数：
辗转相除法：不用比较大小，调整顺序，直接带入数字。
算法： 两数取余，余数为0，则除数为最大公因数，余数不为0，则用除数%余数。
代码：
if(b!=0)
{
temp=a%b;
a=b;
b=temp;
}

过程化平台
一阶段：
5.当输入，输出字符时，应用
a=getchar( ),putchar(a).

水仙花数：
使用循环取各位上的数字，while循环里，每次循环分别处以1,10,100等，然后关于10取余，即可取到。while循环以num>0界定。
代码：
while（num>0\\num!=0）
{
   yushu=(num/t)%10;//t为1,10,100等
   t*=10;
}


排序：
两层循环，第一个数要和其后的所有数比较(内层循环j++)，不符合大小关系的，则交换，然后才到第二个数（进入外层循环i++），重复。

整体后移：
三循环函数：
第一个：复制数组；
第二个：将前面的数向后放；但要从第n-m-1个开始，然后倒向i--，直到i<0,
第三个：再把复制数组的前n-m-1项，从
x[0=]=tmp[n-m+i] (此处n-m不减1，刚好为向前移动的第一位)

矩形矩阵：
二维数组：提供每一位的值两层循环即可；
内层数据之和：i.j的上限都为n-1.
对角线数据之和：横纵坐标都用i；

首字母大写:
输入输出：定义时，定义字符数组，且第一位定义成空格（而不是空串），用于识别第一个字母是否大写。输入是从（str+1）开始的。
输出时，也从第二个开始输出。
注意输入输出用字符和字符串的语句。
识别大小写：空格和\t的判断是析取关系，和大写范围是合取关系。

字母加密：
加密方式：对称加密，将顺序中的第m位换成逆序中的第m位。
换算公式：
miwen=‘z’-(str-‘a’)；
miwen=‘Z’-(str-‘A’)；
字符数组的结束，利用'\0'；来结束，如循环中：
for(i=0;str[i]!='\0';i++)
善用字符数组函数：
获取长度：len=strlen(str);
比较两字符数组：strcmp(str1,str2);注意返回值
复制数组：strcpy(str1,str2);注意返回值。
续接字符数组：strcat(str1,str2);

零分程序原因：
取奇数：用j记录数量时，最后一个j++没有算入，输出结果时，边缘条件不应该取等号。

素数100：用k记录数量时，最后一个k++没有算入，输出时，用的小于等于，多输了一个，不应用等号。

插入数字：在循环后移时，没有考虑到插入数小于所有数的情况，仍为边缘条件未考虑好。

矩阵对角线之和：
1.题意理解错，不应该图快，没看完就开始写代码。
2.数组角标计算总是计算错，或搞忘数组是从0开始。

矩阵周边之和：对于一个进行将形如sum=sum+1;计算的变量，在带入计算前，要先付初值，否则会输出乱码。

递归数列：可以用递归函数的，也可以使用数列来递归。

字符串逆序：使用取字符串长度函数时，没注意到长度比最后一位角标大一的关系，这样第一位始终为空，会多输出一个空格。