概率论补：
第二章：时隔有点久了，但据我推测，n重伯努利分布和泊松分布应该会考，下面记下题型：
题型：一般是二项分布，也就是只有发生和不发生两种情况，但会重复做多次，求至少，至多等问题。
解法：使用C几几的排列组合*该事件一次发生的概率的发生次数次方*另一事件发生的概率的（总事件数-前一事件发生次数）的次方。

泊松分布：
题型：在题中会告诉一个很怪异的式子X~PI（5），而且会说是一个随机变量。
解法:将括号中的数代入公式中的人，k为该事件发生的次数，同样代入即可计算。若次数为不等式，则求临界状态或1-相反情况。

连续型随机变量：
题型：事件概率是以分段函数的形式给出的，要求在某段发生的概率，这个段的情况大致有以下三种：
1.处于题目中某一段范围内，而且是对称的，解法：将该范围折半，再积分。
2.一部分处于某段，另一部分超出上下限，解法：只积分有效范围内的。
3.分别在两段中，解法：分开积分再相加。

3月21日：今天主要是概率论，而且关于题型只有一道，下面记下。
题型：已知两变量离散型随机事件的具体情况，求其分布律，边缘概率，及独立性。
解法：较为简单，只需画出表格，将两个在不同条件下发生的概率求出，然后在表格边缘处将边缘概率加出来即可，至于两事件的独立性，只需看表中概率是否等于对应边缘概率之积即可。

3月26日：刚刚做完了概率论的作业，感觉还不错，虽然是看了答案才做的，但感觉看了再做思路很清晰，现在记下。
主要有四种题型，可能和前面有重复，但这次的更接近考试。
第一种是求分布律
题目：会给一般是求一个大事件在不同发生次数下的概率，最后的结果需要写成一个带有参数k的函数形式，或画出表格。
解法：若是能够写成表达式的就直接写，若是不行，就把每一种情况的概率算出来，然后画表格。

第二种是泊松分布，以前以为是另一种概率模型，不过现在看应该是二项分布在实验次数很大的情况下的一种近似运算。
题目：题目的特点就是实验次数很大，样本空间也很大，不放回的都可以视为有放回，而且多半会说用泊松分布。
解法：先按二项分布把分布律写出来，再改写成泊松分布的形式，其中，langmuda+操作次数*每一次发生的概率。k是时间发生的次数。操作次数和发生次数不一样。
4月8日：前面这种题型的解法刚刚又看了一下，看来以前还有没搞懂的，现在再记下：
题目：表面上是二项分布，但题中一定会说是泊松近似，而且实验次数很大。
解法：要用到泊松分布和泊松定理，先用二项分布的写法写出来，再用约等于对应的泊松分布，而且以前没搞清的是，liangmuda=np,也就是实验次数*事件发生概率。其他的就按照泊松分布的解法，化简后查表即可。还有就是如果是小于7此类的，要转化为小于等于6来做才行。

3月27日：
第三种是概率密度
题目：这种题一般都会先给一个概率密度，而且是分段的，然后问题一般就是其中的某一段。
解法：
1.可能会含有参数，通过概率总和=1就可求出。
2.通过对范围的积分即可求出。
4月8日：刚刚看的时候又解锁了一种新题型，如下：
题目：和一般的概率密度积分没什么区别，但在问题中，会先让你求F(y)，也就是求概率密度的原函数。
解法：求概率密度原函数不说，但后面的求某段的概率就不用积分了，直接带入概率密度的原函数即可求得，但要注意，直接带入求得的值是小于等于该状态下的概率（F(0.5)是指x<=0.5的概率），若要求x>0.5的概率，则1-F(0.5)即可。

第4种是联合分布律
题目：要么根据题目写出分布律，或根据联合分布律写出特定的概率。
解法：写分布律是写概率表达式，只有说明要用表格时才用表格。要注意区别。

然后记下昨天学的几个题型
操他妈比的，老子刚刚才写完概率论二维连续型随机变量的总结，Firefox突然就关了，我草他妈的就关了，fuck。现在重写，真他妈的晦气。
和一维连续型随机变量不同的是，二维中的变量有两个，也就是要用到二重积分，大的题型有3种，现在记下。
第一种：已知概率密度，求X或Y关于某个条件的概率。主要有3种形式。
1.题目：形如：X>2（常数）的概率，
   解法：将该变量对于这个常数限制的范围积分，另一个变量取全集即可。
2.题目：形如：X>Y的概率
   解法：先将y积分，范围是下限~x，然后对于x积分，范围是全集，Y>X同理。
3.题目：形如：X+Y>的概率
   解法：现在还不太懂，评讲时要注意听。？？？？？？？？？？？？？

第二种：已知概率密度，但含有参数，求参数值。
解法：和一维一样，利用归一性，对整个概率密度积分，解出即可。不过作业中的16题不太会，要注意听。

第三种：已知概率密度，求边缘概率密度。
解法：比如对于x求边缘概率密度，则对y求全集即可，只不过要注意找y的积分范围时，是关于x轴作垂线，另一种情况反之。

第3章：
第3章的题前三道题中，2道是离散型变量，常规简单题，就不记了。第3道是泊松分布，第一个问要用到归一性，第二个求泊松分布的分布律就不会了，要去问一下。
然后接下来的2道，虽然是常规的连续型求期望，但积分过程要用到还原，实在太诡异，也要问下。
然后就是关于几种积分求期望的方法，其实都是互通的，离散型的累加其实就是连续型的积分，都是把变量乘以发生数所求的，再加起来，但要记住，离散型中，每一个也要先乘以所求期望的变量。其中关系还要再想想。
第3章主要有3种题型，求期望，求期望的变形，求方差，协方差，相关系数。
求期望：离散型，连续型。
离散型：概率可数型，排列组合型，分布律型。
概率可数型：很简单，概率可以直接数出来，期望就发生数乘以概率再累加就行。
排列组合型：排列数乘以发生概率乘以不发生概率。
分布律型：还是累加来求，但要记到乘以所求期望的变量。
连续型：方法倒是不难，但这次作业中的两道题积分过程都很诡异。要再问哈。应该也是这类题的难点。

求期望的变形：离散型，连续型，二维型
离散型：和连续型的一样，累加时，乘以要积分的变量就行。像sin类型的题要注意。
连续型：一样的，只要乘上积分的变量就行。
二维型：离散型和一维一样，只需乘上变量即可。
             连续型原本以为要换变量，后来发现不用，因为最后求出来的是一个数值，不是代数式，所以先对哪个积分没有影响，不过一般都是先对x后y。

求方差，协方差，相关系数。
方差，协方差其实是一个东西，方差相当于协方差的特殊形式，都是乘积（平方）的期望-期望的乘积（平方）。至于其中两部分具体怎么求就是上一题型的方法。
相关系数：记住算法就行了：协方差/各自方差的算数平方根。


第4章：最简单的标准正态分布计算，含绝对值，求参数值，求变形式的正态分布及概率，应用题。
最简单的标准正态计算：
就化成标准正态分布的形式，然后查表即可。

含绝对值：
解法：很简单，把绝对值打开就行，化成连续不等式，然后化成两个标准正态分布相减即可。

求参数值：
题目：一般会给一个已经查表的概率，但是方差或需满足的条件是参数。
解法：把参数带进去算，再根据反查表结果来解参数即可。但要注意的是，最后一步解释，可以通过1-操作得到两个不等式，就会有正确答案。

求变形式的正态分布及概率：
题目：一般会先给两个基础正态，然后让求变形式满足什么条件的概率。
解法：先把变形式的正态分布写出来，然后按照正常的套路解就行了。不过要注意，在计算新的正态分布时，期望直接线性运算即可，而方差则要先把每个系数包括符号平方，再线性运算。

应用题：常规，含有排列组合，求平均值。
常规：
题目：题中还是会给两个基础正态，然后题中就会要求两个基础正态的某些条件下的运算。
解法：根据题中具体定义，写出新的正态分布，然后再代入计算。难点主要在于对于题目信息的抽象，不过也不是太难。

含有排列组合：
题目：题中会有说从中抽出几个，其概率相互独立，其中满足什么条件的概率为多少。
解法：先求出一个满足条件的概率，然后按照二项分布用排列组合算就行。

求平均值：
题目：可能是从很大的样本中抽取几十个，然后计算平均大于多少的概率。
解法：要先写出关于平均的正态分布，计算的规则：单个的正态期望不变，方差除以要抽取的个数，然后就可以按常规计算了。

4月25日：今天第五章结束，没有新的题型，但有几个新的概率模型，挑重点记下：样本方差，卡方分布，t分布，F分布各自的组成，期望，方差，特性，最后有一个样本方差和卡方分布的式子，其他就先不记了。
样本方差：只有一个定义。
样本方差=1/(n-1)*累加(Xi-X)的平方，也可以将括号打开。

卡方分布：组成，期望方差，特性*2.
组成：n个样本的平方和。
期望：n.
方差：2n.
特性：可加性，超表处理。
可加性：两个卡方之和=自由度之和的卡方。
超表处理：超出40后，就用有正态分布的近似式来计算。




第5章：样本及抽样分布：样本均值，样本方差的组成和性质，三种抽样分布的概率模型。这一章的内容很迷，而题型都是关于概率变量运算的，用到的也只有正态分布。突然记这些知识没啥用，也不好描述，就直接记题了。只有两道：关于变量的变形和运算，关于总体均值和样本均值的概率计算。
变量变形和运算：max*min型，相或型，相与型，变形期望，变形方差。
题型：含有max，min，有X1，X2，X3的。
解法：max,min:先将变量按照相与的形式展开成概率相乘的形式，再将同类型的变量合并成次方的形式（因为是相与），然后再计算单个的概率，最后计算次方。

题型：相或相与型。
解法：相或转化为概率相加，相与转化为相乘。

题型：变形期望：应该主要是求变量的2次方
解法：逆用求方差的公式来降次，而一次方的期望和方差都可通过正态分布得到。

题型：变形方差：会求变量的平方，一次线性变化后的变量。
解法：变量的平方：还是化成期望的那个公式来求，如果变量为同一类型，则还要合并。
         一次线性变化：将方差展开，记住系数要带符号平方。

关于总体均值和样本均值的概率计算。先普及一个概念：样本均值是X头上一横，总体均值就是期望E(X)。
只关于样本均值的概率计算：先求出样本均值的概率分布，然后常规计算。但要注意期望是线性运算除以样本数即可，而方差要将除数平方。

关于样本均值和总体均值都有的计算:记住普及内容，带入运算即可。




先总结下现在总共学了那些概率模型：（4月16日）
1-0分布：E(X)=p,D(X)=p*(1-p).

二项分布（n重伯努利实验）：X~B(n,p)
其中X为实验中成功的次数，n为总实验次数，p为实验成功的概率。数学期望为：np.
D(X)则先求出E(X平方)和E(X)的平方，再用D(X)=E(X平方)-E(X)的平方。E(X平方)将每一项的n平方再乘以原本对应的概率即可。D(Xi)=np(1-p).这里注意，

泊松分布：X~Pi(人).
其中E(X)=D(X)=人。

均匀分布：X~U(a,b)
E(X)=(a+b)/2
D(X)=(b-a)的平方/12

指数分布：X~Exp(人)：E(X)=1/人，D(X)=1/人的平方。

连续型随机变量：X~
E(X)=对xf(x)在定义域类积分。
D(X)还是按照公式，先求出E(X平方)，具体求法参见已知X的概率密度或分布律，求g(X)的期望。

正态分布：X~N(u,o),其中E(X)=u,D(X)=o,由此可知，正态分布可由期望和方差确定。

离散型随机变量：






计算机网络：
（4月1日）
第一章：整体介绍：概述，互联网组成，计算机网络分类，网络性能的衡量标准，计算机网络的体系结构。
概述：网络的定义，互联网的发展，标准化工作。
网络的定义：由若干的节点和连接这些节点的链路组成。
互联网的发展历程：
	第一阶段：单个网络（ARPANET）：在此阶段就引入了TCP/IP协议作为标准协议。
	第二阶段：三级结构的互联网，将网络分为3层：主干网，地区网，校园网（企业网）。由美国提出，覆盖了所有的学校和企业。
	第三阶段：多层次ISP结构的互联网，出现了互联网服务提供商ISP（internet service provoider）。
还有IXP的作用（internet axchang point）：允许两个网络直接进行数据交换，而不需要经过第三个网络进行转发。
标准化工作的流程：互联网草案，建议标准，互联网标准。

互联网组成：分为边缘部分和核心部分
边缘部分：定义，通信方式。
定义：就是供用户使用的部分，在该部分的主机都称为端系统。
通信方式：C/S方式，P2P方式
C/S方式（client/server）：客户和服务器之间的通信，客户是服务请求方，服务器是服务提供方。
P2P方式（peer to peer,又称对等连接）：用户之间的对等通信，没有请求方和提供方。

核心部分：路由器所在的部分。路由器的功能是用来转发数据包。
有两种数据交换方式：电话交换，分组交换。
电话交换：建立连接--通话（一直占用通信资源）--释放连接（归还）。
分组交换：数据处理，转发过程，路由器选路协议。
	数据处理：先将数据分为数据段，每个数据段为1024bit，然后在数据段的前部加上首部，用来指向目的地，处理后的数据段也称为包，首部也称为包头。
	转发过程：先说下主机和路由器的用处，主机是用来处理用户信息的，同时也可通过网络进行数据交换。路由器是用来转发分组的。转发过程中，路由器接收到一个分组，先存储	一下，检查首部，查找转发表，然后根据首部所指的地址，选择合适接口转发，把分组交给下一个路由器。
	路由器选择协议：在网络中的链路或路由器突然发生故障或阻塞时，路由器就会根据该协议自动找到合适的路径转发分组。

网络的分类：根据范围，根据用户。
根据范围分类：广域网（几十公里），城域网（5~50公里），局域网（1公里），个域网（100米）。
根据用户分类：公用网，专用网。

网络性能的衡量：速率，带宽，吞吐量，时延，往返时间。
	速率：数据的传输速率，也就是后面几种衡量标准的基础。单位：bit/s。
	带宽：信道中所能有的最大传输速率，即最高数据率。单位：bit/s。
	吞吐量：信道中的实际传输速率的平均值。
	时延：发送时延，传播时延，处理时延，排队时延。
	发送时延：从主机和路由器发送数据的时间，是指从第一个比特开始，到最后一个比特发送完成。
	传播时延：电磁波在信道中的传播时间。传播时延=信道长度/光速。
	处理时延：路由器接收到数据包后，对数据包的处理时间。比如检查首部，差错检测。
	排队时延：数据包在路由器中等待转发的时间。具体时间取决于当前的通信量。
	往返时间：主机进行一次双向信息交互的时间。

网络五层协议的体系结构：
物理层：传输的比特流，传输的单位是比特。也要考虑引脚之类的东西。
链路层：将数据封装成帧，对每一帧中加上首部等控制信息。是通过MAC地址进行识别。
网络层:网络层由大量的异构网络构成。是通过IP地址进行识别。
运输层：向两台主机中的进程（程序）之间的通用数据传输。
应用层：与用户直接交互的程序。

实体：通信过程中的硬件设备或软件进程。
协议：两个或多个实体间的通信规则。

（3月28日）
第二章：物理层：概述，信道，传输媒体，信道复用，数字传输，ADSL技术
物理层概述：4个特性：机械，电气，功能，过程。都顾名思义，就不说了。

有关信道的概念：工作方式分类，调制方式，信道的极限容量。
按工作方式分类：
单工通信（单向通信）：只有一个通道，且只能单向传输，没有反方向的交互。
半双工通信（双向交替通信）：只有一条通道，但通信双方可以分时交互。
全双工通信（双向同时通信）：必须有两条信道，通信双方可以同时发送信息。

调制方式：（信息的传输处理）
编码（基带调制）：4种
归0制：采用脉冲信号，正脉冲为1，负脉冲为0.
不归0制：采用高低电平，没有中间态。
曼彻斯特编码：在周期中心跳变。向上跳变为0，向下跳变为1.
差分曼彻斯特编码：在周期中心始终有跳变，在周期开始有跳变为0，无跳变为1.

带通调制：
调频，调幅，调相，顾名思义，就不说了。

信道的极限容量：
信道中能通过的频率范围：码元的传输速率超过了上限，就会出现严重的码间串扰，使码元无法被识别。
信噪比：即信号传输功率和信道中噪声功率之比。信噪比越大，传输速率越快。

物理层的传输媒体：导引型，非导引型
导引型：双绞线，同轴电缆，光纤。
双绞线：
根据是否有屏蔽层分为：无屏蔽和屏蔽型。
根据绞合程度分为：不同类的线，其中5类线和超5类线传输速率分别为：100Mbit/s,1Gbit/s。

同轴电缆：
主要用于有线电视。

光纤：
根据其中传输的光线多少分为：多模光纤和单模光纤。
多模光纤中传输易出现信息失真，而单模光纤传输损耗很小，一般的长距离传输就是用的单模光纤。

光纤传输的特点：
1.损耗小，减少中继器的使用。
2.抗干扰能力强。
3.保密性好
4.质量轻，体积小。

非导引型：短波通信，微波通信，无线局域网
短波通信（高频）：由于是通过电离层的反射来传播信号，所以易受天气影响。
微波通信：地面微波接力通信，卫星通信。

地面微波接力通信特点：
1.必须在可视距离内传输（视距传输）。
2.易受天气影响，如大雾，山脉阻挡。

卫星通信：
范围极广，所以通信费用与通信距离无关，与时间有关。

信道复用技术：频分复用，时分复用，码分复用。
频分复用：用户在同一时间选择不同的频率信号来传输信息。用户同时占用不同的带宽资源。波分复用实质就是光的频分复用。
时分复用：用户在不同的时间段使用信道传输信息。用户不同时间占用所有带宽资源。
码分复用：
原理：各个传输基站都会分配到一个唯一的码片序列，且相互正交。当第一个站要向第二个站发送1时，就发送第2个站的码片，发送0的话，就发送第2个站码片的反码。而第二个站在接收到码片序列后，会乘以自己的码片序列，若结果为1，则发送的1；为-1，则发送的0；为0，则没有发送。

数字传输系统：同步光纤网SONET。有主时间进行时间同步。

ADSL技术（非对称数字用户线）：
非对称含义：ADSL的下行（从ISP到用户）的带宽远远大于上行（从用户到ISP）的带宽，所以叫非对称。
我国目前采用的是：离散多音调DMT（也就是频分复用）。


4月10日：第三章：数据链路层：点对点通信，广播通信，以太网扩展，高速以太网。
点对点通信：数据链路和帧，封装成帧，透明传输，差错检验，PPP协议。
链路：从一个节点到另一个节点间的一段物理线路（有线或无线）。
数据链路：将实现协议的软硬件加到链路上，即为数据链路，常见的设备为网络适配器（网卡），网络适配器一般都包含链路层和物理层的功能。
帧：链路层的协议数据单元。
IP数据包：网络层的协议数据单元。

封装成帧：定义，最大传输单元，帧定界符。
定义：在一段数据前后加上首部和尾部，构成一个帧。
MTU：最大传输单元。但要注意，这里的最大指的是数据报的长度，并没有加数据报首部的字节数。
SOH：首部开始符。
EOT：传输结束符。

透明传输：定义，处理方法。
定义：在数据链路层中，含义就是让链路层对某些数据没有任何妨碍，如同透明一样。
处理方法：字符填充，字节填充，要用到转义字符，ESC，并且把ESC加在数据段之中的SOH和EOT之前，让这些字符没有结束和开始的作用。

差错检验：比特差错，误码率，循环冗余校验，无差错接受和可靠传输。
比特差错：传输过程中，1变成0,0变成1.
误码率=出错的字节数/总发送字节数。
循环冗余校验：应该也叫余数校验，就是先将长度为k的数据段补0至（k+n）位，再用约定好的（n+1）位数的除数去除，得到的余数（n位，比除数n+1少一位）作为冗余码拼接在数据段后，使数据段长度为（k+n）,冗余码又称帧检验序列，接收端在接收到数据后，再用约定的除数去除，若余数为0，则接受，若余数不为0，则丢弃。
无差错接收：是指接受端虽然会接收所有的包，但一旦发现有错，就会将包丢弃，相当于接收到的包都没有错。
可靠传输：是指接收端接收到的包和发送端发出的包是一致的，也就是没有差错，乱序等问题。


PPP协议：协议组成，帧界定符的使用，字符填充，零比特填充，PPP协议的工作状态。
协议组成：PPP协议由三部分组成：处理数据报，链路控制协议，网络控制协议。
处理数据报：对数据报进行添加首部尾部的处理，并发送到串行链路的方法。
链路控制协议：用来建立，配置，测试，数据链路连接的协议。
网络控制协议：网络层面的协议。

帧界定符的使用：在两个相邻的数据段之间，只需要一个定界符即可区分，如果出现两个连续的定界符，那就是个空帧。
字符填充：将字符作为转义字符插入。
零比特填充：在五个连续的1后面加上一个0，从而没有6个连续的1出现，实现透明传输。

PPP协议的工作状态：建立物理连接，配置PPP参数，释放链路。
建立物理链接：由主机进行拨号，路由器的调制解调器对拨号确认后，建立一条物理链接。
配置PPP参数：主机向路由器发送一系列分组，这些分组和其响应会协商一些上网的参数，然后NCP会给主机分配一个IP地址，进行上网。
释放链接：先释放网络层链接，NCP回收IP地址（如果太久没有数据传输，也会自动回收），然后释放链路层链接，最后是物理链接。





计算机组成原理快要结课了，当初就开始时学了一下，之后就只是上课听了下，现在先从整体上开始看。





















